name: Automated NPM Release üöÄ

on:
  push:
    branches:
      - main # K√≠ch ho·∫°t khi merge v√†o main branch

jobs:
  release:
    runs-on: ubuntu-latest
    
    # C√†i ƒë·∫∑t quy·ªÅn h·∫°n cho GitHub Actions (quan tr·ªçng cho vi·ªác commit ng∆∞·ª£c l·∫°i)
    permissions:
      contents: write # Cho ph√©p Actions commit l·∫°i package.json v√† t·∫°o tag
      pull-requests: write 
      
    steps:
      - name: ‚¨áÔ∏è Checkout Repo
        uses: actions/checkout@v4
        with:
          # C·∫ßn fetch to√†n b·ªô l·ªãch s·ª≠ ƒë·ªÉ Nx t√≠nh to√°n version (Conventional Commits)
          fetch-depth: 0 
          # S·ª≠ d·ª•ng Token m·∫∑c ƒë·ªãnh c·ªßa GitHub Action (n√™n d√πng)
          token: ${{ secrets.GITHUB_TOKEN }} 
          
      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Thi·∫øt l·∫≠p registry v√† token cho NPM
          registry-url: 'https://registry.npmjs.org'
          
      - name: üì¶ Install Dependencies
        run: npm ci 

      # Bi·∫øn m√¥i tr∆∞·ªùng chung ƒë·ªÉ t·∫Øt Nx Cloud/Cache
      - name: Set environment variables
        run: echo "NX_SKIP_NX_CACHE=true" >> $GITHUB_ENV
        
      - name: üß± Build Affected Libraries
        # THAY TH·∫æ: S·ª≠ d·ª•ng NX_SKIP_NX_CACHE
        run: npx nx affected:build --base=HEAD~1 --head=HEAD --parallel

      - name: üöÄ Run Nx Release & Publish
        env:
          # Truy·ªÅn token NPM ƒë·ªÉ npm publish ho·∫°t ƒë·ªông
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
          
        run: |
          # D√πng tham s·ªë HEAD~1 (commit tr∆∞·ªõc) l√†m BASE v√† HEAD (commit hi·ªán t·∫°i) l√†m HEAD
          # ƒë·ªÉ Nx so s√°nh v√† x√°c ƒë·ªãnh c√°c commits m·ªõi k·ªÉ t·ª´ l·∫ßn release cu·ªëi.
          # THAY TH·∫æ: S·ª≠ d·ª•ng NX_SKIP_NX_CACHE
          npx nx release --base=HEAD~1 --head=HEAD --verbose